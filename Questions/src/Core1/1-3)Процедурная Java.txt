
1.Какие примитивные типы данных есть в Java?
    В состав примитивных типов (или просто примитивов) входят четыре подвида и восемь типов данных:

    целые числа (byte, short, int, long)
    числа с плавающей точкой (float, double)
    логический (boolean)
    символьный (char)

2.Что такое char?
     char - 16-разрядное беззнаковое целое, представляющее собой символ UTF-16 (буквы и цифры).

3.Сколько памяти занимает boolean?
    Тип bool в действительности занимает 1 байт, но из-за выравнивания в памяти,
    на 32-битных платформах он будет выравниваться по 4 байта, а на 64-битных - - по 8 байт.

4.Что такое классы-обертки?
    Одной из особенностей примитивов и их классов-оберток в Java является автоупаковка/автораспаковка
    (Autoboxing/Autounboxing) Давай разберемся с этим понятием. Как мы с тобой уже узнали ранее,
    Java — объектно-ориентированный язык. Это значит, что все программы, написанные на Java, состоят из объектов.
    Примитивы не являются объектами. Но при этом переменной класса-обертки можно присваивать значение примитивного типа.
    Этот процесс называется автоупаковкой (autoboxing). Точно так же переменной примитивного типа можно присваивать
    объект класса-обертки. Этот процесс называется автораспаковкой (autounboxing).

6.Что такое явное и неявное приведение типов? В каких случаях в java нужно использовать явное приведение?
    Тип приведения, когда два типа данных автоматически конвертируются. Также известно как неявное преобразование.
    Происходит, когда два типа данных совместимы, а также когда мы присваиваем значение меньшего типа данных большему типу данных.


    В этом случае, если вы хотите присвоить значение большего типа данных меньшему типу данных, вы можете выполнить
    явное приведение или сужение типов. Это полезно для несовместимых типов данных, где автоматическое преобразование невозможно.


7.Что такое пул интов?
    пул интов - это кэшированные в памяти значения интов от -128 до 127, если создается переменная.

8.Какие нюансы у строк в Java?

    строки в Java являются ссылочным типом данных, Также важно отметить, что строка является неизменяемым типом.
    Для создания объекта String можно использовать двойные кавычки.

9.Что такое пул строк?
    Строковый пул или String pool — это особое место в heap’е, куда попадают объекты типа String после их создания.
    Он выполняет функцию кеша строк. Каждый раз, когда Вы создаёте строку, она попадает в строковый пул.
    Если же на момент создания новой строки пул уже содержит такое же значение, то вместо создания нового объекта
    возвращается тот, что уже лежит в пуле.

10.Почему не рекомендуется изменять строки в цикле? Что рекомендуется использовать?

    Строки являются неизменяемыми объектами, и поэтому, возможно, компилятору придется создать хотя бы один новый
    объект для хранения результата при добавлении к строкам. Построение строки в цикле требует создания новой строки
     на каждой итерации и, следовательно, требует больше времени и памяти. Это плохо скажется на производительности
     алгоритма.

11.Почему строки не рекомендуется использовать для хранения паролей?
    В Java строки неизменяемы, поэтому, как только вы используете String для хранения пароля, содержимое невозможно
    изменить, потому что любое изменение приведет к созданию новой строки. И строка, содержащая пароль,
    будет доступна в памяти до тех пор, пока не будет собран мусор. Таким образом, он будет оставаться в памяти
    в течение длительного времени, что может представлять угрозу безопасности.

12.Почему String неизменяемый и финализированный класс?
    Безопасность и String pool основные причины неизменяемости String в Java.
    Безопасность объекта неизменяемого класса String обусловлена такими фактами:
    вы можете передавать строку между потоками и не беспокоиться что она будет изменена
    нет проблем с синхронизацией (не нужно синхронизировать операции со String)
    отсутствие утечек памяти
    в Java строки используются для передачи параметров для авторизации, открытия файлов и т.д. - неизменяемость позволяет избежать проблем с доступом
    возможность кэшировать hash code
    String pool позволяет экономить память и не создавать новые объекты для каждой повторяющийся строки.
    В случае с изменяемыми строками - изменение одной приводило бы к изменению всех строк одинакового содержания.
    А если нужно изменять, есть StringBuffer.

13.Почему строка является популярным ключом в HashMap в Java?
    Поскольку строки неизменны, их хэшкод кэшируется в момент создания, и не требует повторного пересчета.
    Это делает строки отличным кандидатом для ключа в. Map и они обрабатываются быстрее, чем другие объекты-ключи HashMap.
    Вот почему строки преимущественно используются в качестве ключей HashMap.

14.Что делает метод intern() в классе String?
    Метод intern() – возвращает каноническое представление для строкового объекта. Отсюда следует, что для любых двух
    строк s и t, s.intern() == t.intern(), истинно тогда и только тогда, когда s.equals(t) имеет значение true.

15.Можно ли использовать строки в конструкции switch?
    Вы также можете использовать switch со строкой, однако вы пытаетесь использовать строковый массив.
    Выберите один аргумент, который вы хотите, и используйте его в качестве строки в коммутаторе. Например: String yourChoice = args.

16.Какая основная разница между String, StringBuffer, StringBuilder?
    Разница лишь в том, что StringBuffer потокобезопасен, и все его методы синхронизированы, а StringBuilder — нет.
    Это единственная особенность. StringBuilder в Java работает быстрее StringBuffer’а благодаря несинхронизированности
    методов. Поэтому в большинстве случаев, кроме многопоточной среды, лучше использовать для программы на Java
    StringBuilder. Резюмируем все в сравнительной таблице трех классов: String StringBuffer StringBuilder.

17.Существуют ли в java многомерные массивы?
    Несмотря на то что одномерные массивы употребляются чаще всего, в программировании, безусловно, применяются
    и многомерные (двух-, трехмерные и т.д.) массивы. В Java многомерные массивы представляют собой массивы массивов.
     Двумерные массивы. Среди многомерных массивов наиболее простыми являются двумерные массивы. Двумерный массив,
     по существу, представляет собой ряд одномерных массивов.

18.Какими значениями инициируются переменные по умолчанию?
    Переменные, которые являются полями, если для них не указано значение, то они инициализируются значением по умолчанию.
    Для числовых значением это 0 или 0.0 для чисел с плавающей точкой. Для boolean это false.
    А для всех переменных объектных типов значение будет null (об этом мы ещё поговорим).

