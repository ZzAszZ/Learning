1.Какие нововведения появились в java 8?
   Java 8 поставляется с несколькими новыми функциями, но наиболее важными являются следующие:

   1.Лямбда−выражения - новая языковая функция, позволяющая нам рассматривать действия как объекты
   2.Ссылки на методы − позволяют нам определять лямбда-выражения, обращаясь к методам напрямую, используя их имена
   3.Optional − специальный класс-оболочка, используемый для выражения необязательности
   4.Функциональный интерфейс – интерфейс с максимум одним абстрактным методом; реализация может быть обеспечена с
   использованием лямбда-выражения.

   5.Методы по умолчанию − дают нам возможность добавлять полные реализации в интерфейсы помимо абстрактных методов
   6.Nashorn, движок JavaScript − движок на основе Java для выполнения и оценки кода JavaScript
   7.Stream API − специальный класс итераторов, который позволяет нам обрабатывать коллекции объектов функциональным образом
   8.Date API − улучшенный, неизменяемый интерфейс Date API, основанный на JodaTime

   Наряду с этими новыми функциями, под капотом выполняется множество улучшений функций как на уровне компилятора, так и на уровне JVM.


2.Какие новые классы для работы с датами появились в java 8?
    Быстрый ответ
    В Java 8 добавили новую библиотеку, которая содержит неизменные (immutable), потокобезопасные классы с
    более продуманным дизайном. Это классы. LocalDate, LocalTime, LocalDateTime, Instant, Period и Duration.
    Содержатся они в пакете java.time и не содержат информацию о временной зоне (кроме класса Instant).

3.Расскажите про класс Optional
    Optional – объект-контейнер, используемый для хранения ненулевых объектов. Необязательный объект используется для
    представления нулевого значения с отсутствующим значением. Этот класс имеет различные служебные методы,
    облегчающие коду обрабатывать значения как «доступные» или «недоступные» вместо проверки нулевых значений.

4.Что такое Nashorn?
    Nashorn - это движок JavaScript, разрабатываемый на Java компанией Oracle. Призван дать возможность встраивать код
    JavaScript в приложения Java. В сравнении с Rhino, который поддерживается Mozilla Foundation,
    Nashorn обеспечивает от 2 до 10 раз более высокую производительность, так как он компилирует код и передает
    байт-код виртуальной машине Java непосредственно в памяти.

5.Что такое jjs?
    Jjs – автономный движок Nashorn, который основан на командной строке. Он принимает список JavaScript файлов
    исходного кода и запускает их. Например, давайте создадим файл func.js следующего содержания:

6.Какой класс появился в Java 8 для кодирования/декодирования данных?
    В Java 8 для этого появился класс public static class Base64.Decoder - этот класс реализует декодер для
    декодирования байт данных, используя схему кодирования Base64 как указано в RFC 4648 и RFC 2045, класс
    безопасен для использования несколькими параллельными потоками.

7.Как создать Base64 кодировщик и декодировщик?
    API с помощью base64 на Java прост в использовании. Рассмотрим программу в стиле «Здравствуй, Мир!»,
    которая при помощи base64 кодирует сообщение с помощью базового кодера, а затем осуществляет base64-декодирование.
    В листинге 1 представлен исходный код:

    import java.util.Base64;

    public class HelloBase64
    {
       public static void main(String[] args)
       {
          String msg = "Hello, Base64!";
          Base64.Encoder enc = Base64.getEncoder();
          byte[] encbytes = enc.encode(msg.getBytes());
          for (int i = 0; i < encbytes.length; i++)
          {
             System.out.printf("%c", (char) encbytes[i]);
             if (i != 0 && i % 4 == 0)
                System.out.print(' ');
          }
          System.out.println();
          Base64.Decoder dec = Base64.getDecoder();
          byte[] decbytes = dec.decode(encbytes);
          System.out.println(new String(decbytes));
       }
    }

8.Какие дополнительные методы для работы с ассоциативными массивами (maps) появились в Java 8?

    1. PutIfAbsent()
    До выхода Java 8 для того, чтобы добавить пару в Map, если ее там нет, необходимо было делать следующее

    2. СomputeIfPresent()
    Если нам необходимо произвести какое-то действие со значением в Map, если оно там есть, то и на этот счет в Java
    есть метод

    3. СomputeIfAbsent()
    Здесь все обратно предыдущей ситуации,  действие произойдет в том случае, если значения нет

    4. Remove()
    Хотим удалить из Map пару, если совпадает и ключ, и значение? Легко

    5. GetOrDefault()
    По аналогии с Optional,можно вернуть значение по умолчанию, если с таким ключем нет значения

    7. Merge()
    Если друг понадобилось объединить значение в Map с другим, то это легко сделать с помощью merge()



9.Что такое LocalDateTime?
    Класс java.time.LocalDateTime — представляет собой дату и время в формате по умолчанию: yyyy-MM-dd-HH-mm-ss.zzz.
    Чтобы создать экземпляр LocalDateTime есть метод, который принимает LocalDate и LocalTime в качестве входных
    аргументов.

10.Что такое ZonedDateTime?
    ZonedDateTime — привязка к определенному ZoneId. OffsetDateTime / OffsetTime — дата/время со смещением, но не
    привязанные к определенному часовому поясу. java.time.OffsetDateTime / java.time.OffsetTime. OffsetDateTime —
    это упрощенная версия ZonedDateTime без привязки к конкретному часовому поясу, определенная только смещением.
